var L=Object.defineProperty;var R=(o,t,e)=>t in o?L(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var u=(o,t,e)=>(R(o,typeof t!="symbol"?t+"":t,e),e);import{a as g}from"./axios-21b846bc.js";import{s as w}from"./pinia-e84f6aa2.js";import{a as P}from"./index-0ce5277f.js";import{a as p,E as D}from"./element-plus-e21f9b5a.js";var J=(o=>(o.Json="application/json",o.FormData="multipart/form-data",o.UrlEncoded="application/x-www-form-urlencoded",o.Text="text/plain",o))(J||{});const d=new Map,f={target:null,count:0};class E{constructor({securityWorker:t,secure:e,format:s,...i}={}){u(this,"instance");u(this,"securityData",null);u(this,"securityWorker");u(this,"secure");u(this,"format");u(this,"setSecurityData",t=>{this.securityData=t});u(this,"request",async({secure:t,path:e,type:s,query:i,format:r,body:n,showErrorMessage:l=!0,showSuccessMessage:m=!1,login:y=!0,loading:h=!1,loadingOptions:q={},cancelRepeatRequest:T=!1,...b})=>{const j=(typeof t=="boolean"?t:this.secure)&&this.securityWorker&&await this.securityWorker(this.securityData)||{},k=this.mergeRequestParams(b,j),v=r||this.format||void 0;return s==="multipart/form-data"&&n&&n!==null&&typeof n=="object"&&(n=this.createFormData(n)),s==="text/plain"&&n&&n!==null&&typeof n!="string"&&(n=JSON.stringify(n)),this.instance.interceptors.request.use(a=>{this.removePending(a),T&&this.addPending(a),h&&(f.count++,f.count===1&&(f.target=D.service(q)));const{userInfos:c}=w(P()),F=c.value.token;return a.headers.Authorization=`Bearer ${F}`,a},a=>Promise.reject(a)),this.instance.interceptors.response.use(a=>{this.removePending(a.config),h&&this.closeLoading(h);const c=a.data;return c.success?m&&p.success({message:c.msg?c.msg:"操作成功",grouping:!0}):l&&p.error({message:c.msg?c.msg:"操作失败",grouping:!0}),a},async a=>{var c;return a.config&&this.removePending(a.config),h&&this.closeLoading(h),y&&((c=a==null?void 0:a.response)==null?void 0:c.status)===401?this.refreshToken(a.config):(l&&this.errorHandle(a),Promise.reject(a))}),this.instance.request({...k,headers:{...k.headers||{},...s&&s!=="multipart/form-data"?{"Content-Type":s}:{}},params:i,responseType:v,data:n,url:e}).then(a=>a.data)});this.instance=g.create({...i,timeout:6e4,baseURL:i.baseURL||"/"}),this.secure=e,this.format=s,this.securityWorker=t}mergeRequestParams(t,e){const s=t.method||e&&e.method;return{...this.instance.defaults,...t,...e||{},headers:{...s&&this.instance.defaults.headers[s.toLowerCase()]||{},...t.headers||{},...e&&e.headers||{}}}}stringifyFormItem(t){return typeof t=="object"&&t!==null?JSON.stringify(t):`${t}`}createFormData(t){return Object.keys(t||{}).reduce((e,s)=>{const i=t[s],r=i instanceof Array?i:[i];for(const n of r){const l=n instanceof Blob||n instanceof File;e.append(s,l?n:this.stringifyFormItem(n))}return e},new FormData)}errorHandle(t){if(!t)return;if(g.isCancel(t))return console.error("请求重复已被自动取消："+t.message);let e="";if(t.response)switch(t.response.status){case 302:e="接口重定向";break;case 400:e="参数不正确";break;case 401:e="您还没有登录";break;case 403:e="您没有权限操作";break;case 404:e="请求地址出错："+t.response.config.url;break;case 408:e="请求超时";break;case 409:e="系统已存在相同数据";break;case 500:e="服务器内部错误";break;case 501:e="服务未实现";break;case 502:e="网关错误";break;case 503:e="服务不可用";break;case 504:e="服务暂时无法访问，请稍后再试";break;case 505:e="HTTP版本不受支持";break;default:e="异常问题，请联系网站管理员";break}t.message.includes("timeout")&&(e="请求超时"),t.message.includes("Network")&&(e=window.navigator.onLine?"服务端异常":"您已断网"),e&&p.error({message:e,grouping:!0})}async refreshToken(t){const e=P(),{userInfos:s}=w(e),i=s.value.token;return i?window.tokenRefreshing?(window.requests=window.requests?window.requests:[],new Promise(r=>{window.requests.push(()=>{r(this.instance(t))})})):(window.tokenRefreshing=!0,this.request({path:"/api/admin/auth/refresh",method:"GET",secure:!0,format:"json",login:!1,query:{token:i}}).then(r=>{var n;if(r!=null&&r.success){const l=r.data.token;return e.setToken(l),((n=window.requests)==null?void 0:n.length)>0&&(window.requests.forEach(m=>m()),window.requests=[]),this.instance(t)}else return e.clear(),Promise.reject(r)}).catch(r=>(e.clear(),Promise.reject(r))).finally(()=>{window.tokenRefreshing=!1})):(e.clear(),Promise.reject(t))}addPending(t){const e=this.getPendingKey(t);t.cancelToken=t.cancelToken||new g.CancelToken(s=>{d.has(e)||d.set(e,s)})}removePending(t){const e=this.getPendingKey(t);d.has(e)&&(d.get(e)(e),d.delete(e))}getPendingKey(t){let{data:e,headers:s}=t;s=s;const{url:i,method:r,params:n}=t;return typeof e=="string"&&(e=JSON.parse(e)),[i,r,s&&s.Authorization?s.Authorization:"",JSON.stringify(n),JSON.stringify(e)].join("&")}closeLoading(t=!1){t&&f.count>0&&f.count--,f.count===0&&(f.target.close(),f.target=null)}}export{J as C,E as H};
