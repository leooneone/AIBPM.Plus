import{m as c}from"./index.58028536.js";import{R as i,z as s,S as r,x as n}from"./vue.df334614.js";const u=c("accept,accept-charset,accesskey,action,align,alt,async,autocomplete,autofocus,autoplay,autosave,bgcolor,border,buffered,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,http-equiv,name,contenteditable,contextmenu,controls,coords,data,datetime,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,method,for,form,formaction,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,ismap,itemprop,keytype,kind,label,lang,language,list,loop,low,manifest,max,maxlength,media,method,GET,POST,min,multiple,email,file,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,seamless,selected,shape,size,type,text,password,sizes,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,type,usemap,value,width,wrap");function d(o,e,a){e.props.value=a,e.on.input=l=>{o.$emit("input",l)}}const h={"el-input":{prepend(o,e,a){return s("template",{slot:"prepend"},[e[a]])},append(o,e,a){return s("template",{slot:"append"},[e[a]])}},"el-select":{options(o,e,a){const l=[];return e.options.forEach(t=>{l.push(s(r("el-option"),{label:t.label,value:t.value,disabled:t.disabled},null))}),l}},"el-radio-group":{options(o,e,a){const l=[];return e.options.forEach(t=>{e.optionType==="button"?l.push(s(r("el-radio-button"),{label:t.value},{default:()=>[t.label]})):l.push(s(r("el-radio"),{label:t.value,border:e.border},{default:()=>[t.label]}))}),l}},"el-checkbox-group":{options(o,e,a){const l=[];return e.options.forEach(t=>{e.optionType==="button"?l.push(s(r("el-checkbox-button"),{label:t.value},{default:()=>[t.label]})):l.push(s(r("el-checkbox"),{label:t.value,border:e.border},{default:()=>[t.label]}))}),l}},"el-upload":{"list-type":(o,e,a)=>{const l=[];return e["list-type"]==="picture-card"?l.push(s("i",{class:"el-icon-plus"},null)):l.push(s(r("el-button"),{size:"small",type:"primary",icon:"el-icon-upload"},{default:()=>[e.buttonText]})),e.showTip&&l.push(s("div",{slot:"tip",class:"el-upload__tip"},[n("只能上传不超过 "),e.fileSize,e.sizeUnit,n(" 的"),e.accept,n("文件")])),l}}},m={render(){const o={attrs:{},props:{},on:{},style:{}},e=JSON.parse(JSON.stringify(this.conf)),a=[],l=h[e.tag];return l&&Object.keys(l).forEach(t=>{const p=l[t];e[t]&&a.push(p(i,e,t))}),Object.keys(e).forEach(t=>{const p=e[t];t==="vModel"?d(this,o,e.defaultValue):o[t]?o[t]=p:u(t)?o.attrs[t]=p:o.props[t]=p}),i(this.conf.tag,o,a)},props:["conf"]};export{m as default};
